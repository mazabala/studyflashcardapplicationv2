import type { ComponentLocalizations, ImageMaskShapeType, PaywallData, TextProps } from "./data/entities.js";
import { type BorderType, type ColorMode, type ColorType, type DimensionType, FontSizeTags, type ShadowType, type ShapeType, type SizeType, type Spacing } from "./types.js";
export type TextComponentTags = "p" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
/**
 * Maps font size to appropriate HTML heading tag
 * @param fontSize - Key from FontSizeTags enum
 * @returns Corresponding HTML heading tag
 */
export declare function getTextComponentTag(fontSize: keyof typeof FontSizeTags): TextComponentTags;
/**
 * Generates comprehensive component styles including spacing, colors, borders and shadows
 * @param params - Component style configuration object
 * @returns CSS style object with component styles
 */
export declare function getComponentStyles({ backgroundColor, border, margin, padding, textColor, colorMode, shape, shadow, }: {
    padding?: Spacing;
    margin?: Spacing;
    backgroundColor?: ColorType;
    textColor?: ColorType;
    border?: BorderType;
    colorMode?: ColorMode;
    shape?: ShapeType;
    shadow?: ShadowType;
}): {
    "--margin-block-start": string;
    "--margin-inline-end": string;
    "--margin-block-end": string;
    "--margin-inline-start": string;
    "--padding-block-start": string;
    "--padding-inline-end": string;
    "--padding-block-end": string;
    "--padding-inline-start": string;
    "--background-color": string;
    "--text-color": string;
    "--border": string;
    "--border-radius": string;
    "--shadow": string;
};
/**
 * Generates size-related CSS styles for components
 * @param size - Size configuration object
 * @returns CSS style object with size properties
 */
export declare function getSizeStyle(size: SizeType): {
    "--width": string;
    "--height": string;
    "--flex": string;
};
/**
 * Generates gradient background styles
 * @param colorMode - Color mode (light/dark)
 * @param gradientColors - Array of colors for gradient
 * @returns CSS style object with gradient background
 */
export declare function getGradientStyle(colorMode: ColorMode, gradientColors?: ColorType[]): {
    "--background": string;
};
/**
 * Generates mask styles for images
 * @param maskShape - Shape configuration for image mask
 * @returns CSS style object with mask properties
 */
export declare const getMaskStyle: (maskShape?: ImageMaskShapeType) => {
    "--corner-radius": string;
    "--clip-path": string;
};
/**
 * Generates dimension-related styles for stack components
 * @param dimension - Dimension configuration object
 * @returns CSS style object with flex layout properties
 */
export declare function getDimensionStyle(dimension: DimensionType): {
    "--direction": string;
    "--alignment": string;
    "--distribution": string;
};
/**
 * Generates text-related styles
 * @param props - Text component properties
 * @returns CSS style object with text formatting properties
 */
export declare function getTextStyles(props: TextProps): {
    "--text-align": string;
    "--font-weight": number;
    "--font-size": string;
    "--font-family": string;
};
/**
 * Converts a style object to a CSS string
 * @param styles - Object containing CSS properties and values
 * @returns CSS string
 */
export declare function stringifyStyles(styles: Record<string, string | number>): string;
/**
 * Given a ComponentLocalizations object and a locale returns the label with label_id in the chosen locale, if any. Falls
 * back to the label with the same label_id in the fallbackLocale, if any. Finally returns undefined if no label can be
 * found for the requested label_id.
 * @param label_id - The id of the label to be returned
 * @param locale - The preferred locale to return the label
 * @param fallbackLocale - The locale to fall back to in case no label is found in the preferred one
 * @param labels - A ComponentLocalizations instance
 * @returns The label in the preferred or fallback locale, or undefined.
 */
export declare function getLabelById(label_id: string, locale: string, fallbackLocale: string, labels: ComponentLocalizations): string | undefined;
/**
 * Given an instance of PaywallData, returns the id of the first package marked as `is_selected_by_default` if any.
 * @param paywallData
 * @returns the id of the first package marked as `is_selected_by_default` or undefined
 */
export declare function findSelectedPackageId(paywallData: PaywallData): string | undefined;
